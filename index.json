[{"content":"소개 안녕하세요, PiesP의 블로그에 오신 것을 환영합니다!\n이 블로그는 Hugo를 사용하여 만들어졌으며, 다양한 주제에 관한 글을 작성할 예정입니다.\n","permalink":"https://piesp.github.io/about/","summary":"소개 안녕하세요, PiesP의 블로그에 오신 것을 환영합니다!\n이 블로그는 Hugo를 사용하여 만들어졌으며, 다양한 주제에 관한 글을 작성할 예정입니다.","title":"About"},{"content":"GitHub Actions 소개 GitHub Actions는 GitHub 저장소에서 직접 워크플로우를 자동화할 수 있는 CI/CD(지속적 통합/지속적 배포) 도구입니다. 코드를 작성하고 푸시하면 자동으로 빌드, 테스트, 배포까지 이어지는 과정을 구현할 수 있습니다.\nHugo 블로그와 GitHub Actions Hugo로 만든 정적 블로그를 GitHub Pages에 배포하는 과정은 다음과 같은 단계로 이루어집니다:\nHugo로 정적 파일 생성 생성된 파일을 GitHub Pages 브랜치에 푸시 GitHub Pages에서 웹사이트 제공 이 모든 과정을 GitHub Actions를 사용하여 자동화할 수 있습니다.\n자동 배포 워크플로우 설정하기 1. 워크플로우 파일 생성 저장소의 .github/workflows 디렉토리에 deploy.yml 파일을 생성합니다. 이 파일에 워크플로우 설정을 작성합니다.\nname: Deploy Hugo Blog on: push: branches: - master # 또는 main 브랜치 jobs: build-and-deploy: runs-on: ubuntu-latest steps: - name: Checkout Repository uses: actions/checkout@v4 - name: Setup Git Submodules run: | git submodule update --init --recursive - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.123.6\u0026#39; - name: Build Hugo Site run: | cd piesp-blog hugo --minify - name: Deploy to GitHub Pages uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./piesp-blog/public 2. 워크플로우 작동 원리 위 워크플로우는 다음과 같은 순서로 동작합니다:\nCheckout Repository: 저장소의 코드를 가져옵니다. Setup Git Submodules: Hugo 테마와 같은 서브모듈을 초기화합니다. Setup Hugo: 지정된 버전의 Hugo를 설치합니다. Build Hugo Site: Hugo를 사용하여 정적 사이트를 생성합니다. Deploy to GitHub Pages: 생성된 파일을 GitHub Pages에 배포합니다. 워크플로우 최적화 팁 1. 캐싱 활용 빌드 시간을 단축하기 위해 Hugo 모듈과 같은 의존성을 캐싱할 수 있습니다:\n- name: Cache Hugo modules uses: actions/cache@v2 with: path: /tmp/hugo_cache key: ${{ runner.os }}-hugo-${{ hashFiles(\u0026#39;**/go.sum\u0026#39;) }} restore-keys: | ${{ runner.os }}-hugo- 2. 특정 파일 변경 시에만 실행 모든 푸시에 대해 워크플로우를 실행하지 않고, 콘텐츠나 설정이 변경된 경우에만 실행하도록 설정할 수 있습니다:\non: push: branches: - master paths: - \u0026#39;piesp-blog/**\u0026#39; - \u0026#39;.github/workflows/**\u0026#39; 결론 GitHub Actions를 활용하면 Hugo 블로그의 배포 과정을 완전히 자동화할 수 있습니다. 이를 통해 콘텐츠 작성에만 집중하고, 배포 과정에 소요되는 시간과 노력을 절약할 수 있습니다. 더 복잡한 워크플로우도 필요에 따라 구성할 수 있으니, GitHub Actions 문서를 참고하여 자신만의 워크플로우를 만들어보세요.\n","permalink":"https://piesp.github.io/posts/github-actions/","summary":"GitHub Actions 소개 GitHub Actions는 GitHub 저장소에서 직접 워크플로우를 자동화할 수 있는 CI/CD(지속적 통합/지속적 배포) 도구입니다. 코드를 작성하고 푸시하면 자동으로 빌드, 테스트, 배포까지 이어지는 과정을 구현할 수 있습니다.\nHugo 블로그와 GitHub Actions Hugo로 만든 정적 블로그를 GitHub Pages에 배포하는 과정은 다음과 같은 단계로 이루어집니다:\nHugo로 정적 파일 생성 생성된 파일을 GitHub Pages 브랜치에 푸시 GitHub Pages에서 웹사이트 제공 이 모든 과정을 GitHub Actions를 사용하여 자동화할 수 있습니다.\n자동 배포 워크플로우 설정하기 1.","title":"GitHub Actions로 Hugo 블로그 자동 배포하기"},{"content":"Hugo 테마 선택의 중요성 블로그를 시작할 때 가장 중요한 결정 중 하나는 테마 선택입니다. 테마는 블로그의 시각적 아이덴티티를 결정하고 사용자 경험에 큰 영향을 미칩니다. 이 글에서는 Hugo 블로그에 적합한 테마를 선택하는 방법을 알아보겠습니다.\n인기 있는 Hugo 테마 1. PaperMod 현재 제 블로그에서 사용 중인 테마입니다. 심플하고 깔끔한 디자인이 특징이며, 다크 모드와 라이트 모드를 모두 지원합니다. SEO에 최적화되어 있고, 모바일 친화적입니다.\n2. Stack 소셜 미디어 공유 기능과 댓글 시스템이 잘 통합되어 있는 테마입니다. 이미지가 많은 블로그에 적합합니다.\n3. LoveIt 다양한 단축키와 기능을 제공하는 풍부한 테마입니다. 수학 공식 렌더링, 코드 하이라이팅 등 개발자나 수학 관련 콘텐츠에 유용합니다.\n테마 선택 시 고려사항 반응형 디자인: 모바일 기기에서도 잘 작동하는지 확인하세요. 사용자 정의 가능성: 테마를 얼마나 쉽게 수정할 수 있는지 고려하세요. 성능: 페이지 로딩 속도는 사용자 경험과 SEO에 영향을 미칩니다. 지원 및 문서화: 활발한 개발과 좋은 문서를 가진 테마를 선택하세요. SEO 최적화: 검색 엔진에 잘 노출되도록 설계된 테마를 선택하세요. 테마 커스터마이징 팁 테마를 선택한 후에는 자신만의 스타일로 커스터마이징하는 것이 중요합니다. Hugo에서는 다음과 같은 방법으로 테마를 수정할 수 있습니다:\nconfig.toml 파일 수정: 대부분의 테마는 설정 파일을 통해 다양한 옵션을 제공합니다. CSS 오버라이드: 대부분의 테마는 사용자 정의 CSS를 추가할 수 있습니다. 부분 템플릿 오버라이드: 테마의 특정 부분만 수정하고 싶다면, 해당 부분 템플릿을 오버라이드할 수 있습니다. 결론 적절한 Hugo 테마를 선택하는 것은 블로그의 성공에 중요한 요소입니다. 자신의 콘텐츠와 목적에 맞는 테마를 선택하고, 필요에 따라 커스터마이징하여 독특한 블로그를 만들어 보세요.\n","permalink":"https://piesp.github.io/posts/hugo-themes/","summary":"Hugo 테마 선택의 중요성 블로그를 시작할 때 가장 중요한 결정 중 하나는 테마 선택입니다. 테마는 블로그의 시각적 아이덴티티를 결정하고 사용자 경험에 큰 영향을 미칩니다. 이 글에서는 Hugo 블로그에 적합한 테마를 선택하는 방법을 알아보겠습니다.\n인기 있는 Hugo 테마 1. PaperMod 현재 제 블로그에서 사용 중인 테마입니다. 심플하고 깔끔한 디자인이 특징이며, 다크 모드와 라이트 모드를 모두 지원합니다. SEO에 최적화되어 있고, 모바일 친화적입니다.\n2. Stack 소셜 미디어 공유 기능과 댓글 시스템이 잘 통합되어 있는 테마입니다.","title":"Hugo 테마 선택 가이드"},{"content":"블로그 시작 Hugo 블로그를 설정하고 첫 번째 글을 작성합니다.\nHugo란? Hugo는 Go 언어로 작성된 정적 사이트 생성기로, 매우 빠른 빌드 속도를 자랑합니다. 마크다운 형식으로 콘텐츠를 작성하면 HTML로 변환하여 웹사이트를 생성해 줍니다.\nGitHub Pages로 배포하기 GitHub Pages를 사용하면 무료로 정적 웹사이트를 호스팅할 수 있습니다. GitHub Actions를 활용하여 자동 배포 파이프라인을 구축할 수 있어 편리합니다.\n앞으로의 계획 이 블로그에서는 다양한 주제에 대한 글을 작성할 예정입니다. 많은 관심 부탁드립니다!\n","permalink":"https://piesp.github.io/posts/hello-world/","summary":"블로그 시작 Hugo 블로그를 설정하고 첫 번째 글을 작성합니다.\nHugo란? Hugo는 Go 언어로 작성된 정적 사이트 생성기로, 매우 빠른 빌드 속도를 자랑합니다. 마크다운 형식으로 콘텐츠를 작성하면 HTML로 변환하여 웹사이트를 생성해 줍니다.\nGitHub Pages로 배포하기 GitHub Pages를 사용하면 무료로 정적 웹사이트를 호스팅할 수 있습니다. GitHub Actions를 활용하여 자동 배포 파이프라인을 구축할 수 있어 편리합니다.\n앞으로의 계획 이 블로그에서는 다양한 주제에 대한 글을 작성할 예정입니다. 많은 관심 부탁드립니다!","title":"안녕하세요, Hugo!"}]