[{"content":"소개 안녕하세요, PiesP의 블로그에 오신 것을 환영합니다!\n이 블로그는 Hugo를 사용하여 만들어졌으며, 다양한 주제에 관한 글을 작성할 예정입니다.\n","permalink":"https://piesp.github.io/about/","summary":"소개 안녕하세요, PiesP의 블로그에 오신 것을 환영합니다!\n이 블로그는 Hugo를 사용하여 만들어졌으며, 다양한 주제에 관한 글을 작성할 예정입니다.","title":"About"},{"content":"GitHub Actions 소개 GitHub Actions는 GitHub 저장소에서 직접 워크플로우를 자동화할 수 있는 CI/CD(지속적 통합/지속적 배포) 도구입니다. 코드를 작성하고 푸시하면 자동으로 빌드, 테스트, 배포까지 이어지는 과정을 구현할 수 있습니다.\nHugo 블로그와 GitHub Actions Hugo로 만든 정적 블로그를 GitHub Pages에 배포하는 과정은 다음과 같은 단계로 이루어집니다:\nHugo로 정적 파일 생성 생성된 파일을 GitHub Pages 브랜치에 푸시 GitHub Pages에서 웹사이트 제공 이 모든 과정을 GitHub Actions를 사용하여 자동화할 수 있습니다.\n자동 배포 워크플로우 설정하기 1. 워크플로우 파일 생성 저장소의 .github/workflows 디렉토리에 deploy.yml 파일을 생성합니다. 이 파일에 워크플로우 설정을 작성합니다.\nname: Deploy Hugo Blog on: push: branches: - master # 또는 main 브랜치 jobs: build-and-deploy: runs-on: ubuntu-latest steps: - name: Checkout Repository uses: actions/checkout@v4 - name: Setup Git Submodules run: | git submodule update --init --recursive - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.123.6\u0026#39; - name: Build Hugo Site run: | cd piesp-blog hugo --minify - name: Deploy to GitHub Pages uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./piesp-blog/public 2. 워크플로우 작동 원리 위 워크플로우는 다음과 같은 순서로 동작합니다:\nCheckout Repository: 저장소의 코드를 가져옵니다. Setup Git Submodules: Hugo 테마와 같은 서브모듈을 초기화합니다. Setup Hugo: 지정된 버전의 Hugo를 설치합니다. Build Hugo Site: Hugo를 사용하여 정적 사이트를 생성합니다. Deploy to GitHub Pages: 생성된 파일을 GitHub Pages에 배포합니다. 워크플로우 최적화 팁 1. 캐싱 활용 빌드 시간을 단축하기 위해 Hugo 모듈과 같은 의존성을 캐싱할 수 있습니다:\n- name: Cache Hugo modules uses: actions/cache@v2 with: path: /tmp/hugo_cache key: ${{ runner.os }}-hugo-${{ hashFiles(\u0026#39;**/go.sum\u0026#39;) }} restore-keys: | ${{ runner.os }}-hugo- 2. 특정 파일 변경 시에만 실행 모든 푸시에 대해 워크플로우를 실행하지 않고, 콘텐츠나 설정이 변경된 경우에만 실행하도록 설정할 수 있습니다:\non: push: branches: - master paths: - \u0026#39;piesp-blog/**\u0026#39; - \u0026#39;.github/workflows/**\u0026#39; 결론 GitHub Actions를 활용하면 Hugo 블로그의 배포 과정을 완전히 자동화할 수 있습니다. 이를 통해 콘텐츠 작성에만 집중하고, 배포 과정에 소요되는 시간과 노력을 절약할 수 있습니다. 더 복잡한 워크플로우도 필요에 따라 구성할 수 있으니, GitHub Actions 문서를 참고하여 자신만의 워크플로우를 만들어보세요.\n","permalink":"https://piesp.github.io/posts/github-actions/","summary":"GitHub Actions 소개 GitHub Actions는 GitHub 저장소에서 직접 워크플로우를 자동화할 수 있는 CI/CD(지속적 통합/지속적 배포) 도구입니다. 코드를 작성하고 푸시하면 자동으로 빌드, 테스트, 배포까지 이어지는 과정을 구현할 수 있습니다.\nHugo 블로그와 GitHub Actions Hugo로 만든 정적 블로그를 GitHub Pages에 배포하는 과정은 다음과 같은 단계로 이루어집니다:\nHugo로 정적 파일 생성 생성된 파일을 GitHub Pages 브랜치에 푸시 GitHub Pages에서 웹사이트 제공 이 모든 과정을 GitHub Actions를 사용하여 자동화할 수 있습니다.\n자동 배포 워크플로우 설정하기 1.","title":"GitHub Actions로 Hugo 블로그 자동 배포하기"},{"content":"Hugo 테마 선택의 중요성 블로그를 시작할 때 가장 중요한 결정 중 하나는 테마 선택입니다. 테마는 블로그의 시각적 아이덴티티를 결정하고 사용자 경험에 큰 영향을 미칩니다. 이 글에서는 Hugo 블로그에 적합한 테마를 선택하는 방법을 알아보겠습니다.\n인기 있는 Hugo 테마 1. PaperMod 현재 제 블로그에서 사용 중인 테마입니다. 심플하고 깔끔한 디자인이 특징이며, 다크 모드와 라이트 모드를 모두 지원합니다. SEO에 최적화되어 있고, 모바일 친화적입니다.\n2. Stack 소셜 미디어 공유 기능과 댓글 시스템이 잘 통합되어 있는 테마입니다. 이미지가 많은 블로그에 적합합니다.\n3. LoveIt 다양한 단축키와 기능을 제공하는 풍부한 테마입니다. 수학 공식 렌더링, 코드 하이라이팅 등 개발자나 수학 관련 콘텐츠에 유용합니다.\n테마 선택 시 고려사항 반응형 디자인: 모바일 기기에서도 잘 작동하는지 확인하세요. 사용자 정의 가능성: 테마를 얼마나 쉽게 수정할 수 있는지 고려하세요. 성능: 페이지 로딩 속도는 사용자 경험과 SEO에 영향을 미칩니다. 지원 및 문서화: 활발한 개발과 좋은 문서를 가진 테마를 선택하세요. SEO 최적화: 검색 엔진에 잘 노출되도록 설계된 테마를 선택하세요. 테마 커스터마이징 팁 테마를 선택한 후에는 자신만의 스타일로 커스터마이징하는 것이 중요합니다. Hugo에서는 다음과 같은 방법으로 테마를 수정할 수 있습니다:\nconfig.toml 파일 수정: 대부분의 테마는 설정 파일을 통해 다양한 옵션을 제공합니다. CSS 오버라이드: 대부분의 테마는 사용자 정의 CSS를 추가할 수 있습니다. 부분 템플릿 오버라이드: 테마의 특정 부분만 수정하고 싶다면, 해당 부분 템플릿을 오버라이드할 수 있습니다. 결론 적절한 Hugo 테마를 선택하는 것은 블로그의 성공에 중요한 요소입니다. 자신의 콘텐츠와 목적에 맞는 테마를 선택하고, 필요에 따라 커스터마이징하여 독특한 블로그를 만들어 보세요.\n","permalink":"https://piesp.github.io/posts/hugo-themes/","summary":"Hugo 테마 선택의 중요성 블로그를 시작할 때 가장 중요한 결정 중 하나는 테마 선택입니다. 테마는 블로그의 시각적 아이덴티티를 결정하고 사용자 경험에 큰 영향을 미칩니다. 이 글에서는 Hugo 블로그에 적합한 테마를 선택하는 방법을 알아보겠습니다.\n인기 있는 Hugo 테마 1. PaperMod 현재 제 블로그에서 사용 중인 테마입니다. 심플하고 깔끔한 디자인이 특징이며, 다크 모드와 라이트 모드를 모두 지원합니다. SEO에 최적화되어 있고, 모바일 친화적입니다.\n2. Stack 소셜 미디어 공유 기능과 댓글 시스템이 잘 통합되어 있는 테마입니다.","title":"Hugo 테마 선택 가이드"},{"content":"X.com 향상된 이미지 갤러리 소개 최근 X.com(구 트위터)의 이미지 뷰어는 많은 제한사항을 가지고 있습니다. 특히 여러 이미지가 포함된 게시물을 볼 때 원본 크기로 보기 어렵고, 이미지를 저장하려면 일일이 클릭해야 하는 번거로움이 있습니다. 이러한 불편함을 해소하기 위해 제작한 \u0026ldquo;X.com 향상된 이미지 갤러리\u0026rdquo; 유저 스크립트를 소개합니다.\n주요 기능 이 스크립트는 X.com의 기본 이미지 뷰어를 완전히 대체하여 더 나은 사용자 경험을 제공합니다:\n원본 크기 이미지 표시: X.com이 제공하는 압축된 이미지 대신 원본 크기의 이미지를 볼 수 있습니다.\n수직 스크롤 갤러리: 여러 이미지를 수직으로 스크롤하며 볼 수 있어 더 편리한 탐색이 가능합니다.\n다양한 보기 모드:\n너비에 맞춤 높이에 맞춤 창에 맞춤 원본 크기 편리한 이미지 탐색:\n썸네일 네비게이션 화면 컨트롤 키보드 단축키 다운로드 옵션:\n현재 이미지 저장 모든 이미지 ZIP 파일로 일괄 다운로드 다국어 지원: 한국어와 영어 인터페이스 제공\nX.com 테마 자동 적용: 사이트의 현재 테마에 맞춰 UI가 자동으로 조정됩니다.\n설치 방법 먼저 유저 스크립트 관리자를 설치합니다:\nTampermonkey (권장) Violentmonkey Greasemonkey 아래 링크를 클릭하여 스크립트를 설치합니다:\nX.com 향상된 이미지 갤러리 설치 유저 스크립트 관리자에서 설치를 확인합니다.\n사용 방법 기본 사용법 X.com에서 아무 이미지나 클릭하면 자동으로 향상된 갤러리가 열립니다. 상단 컨트롤을 사용하여 보기 모드를 변경하거나 이미지를 다운로드할 수 있습니다. 수직으로 스크롤하여 여러 이미지를 탐색할 수 있습니다. 이미지 영역 밖을 클릭하거나 ESC 키를 눌러 뷰어를 닫습니다. 키보드 단축키 왼쪽/위 화살표: 이전 이미지 오른쪽/아래 화살표: 다음 이미지 스페이스바: 다음 이미지 Home/End: 첫 번째/마지막 이미지 ESC: 뷰어 닫기 동작 원리 이 스크립트는 X.com의 기본 이미지 뷰어를 가로채고 사용자 정의 갤러리 인터페이스로 대체합니다. 원본 크기 이미지 URL을 추출하고 사용자 정의 뷰어에서 표시합니다. 웹 페이지의 DOM을 수정하지만, X.com 서버와는 직접적인 상호작용이 없으므로 계정 보안에 영향을 주지 않습니다.\n주요 기술적 특징:\n깨끗한 아키텍처: 코드가 모듈화되어 있어 유지보수가 용이합니다. 효율적인 이미지 처리: 필요할 때만 이미지를 로드하여 메모리 사용량을 줄입니다. 이벤트 처리: 키보드와 마우스 이벤트를 정교하게 관리합니다. 적응형 UI: 다크 모드와 라이트 모드 모두에서 잘 작동합니다. 개발 배경 X.com은 최근 몇 년간 이미지 뷰어를 여러 번 변경했으며, 각 업데이트마다 사용자 경험이 저하되는 경향이 있었습니다. 특히 이미지가 압축되어 표시되고, 여러 이미지를 효율적으로 볼 수 있는 방법이 제한되는 문제가 있었습니다.\n이 스크립트는 이러한 제한을 극복하고 사용자가 X.com에서 게시된 이미지를 최대한 활용할 수 있도록 개발되었습니다. 특히 사진 작가나 디자이너와 같이 고품질 이미지 확인이 필요한 사용자에게 유용합니다.\n맺음말 X.com을 자주 사용하고 이미지를 많이 보는 사용자라면 이 유저 스크립트가 큰 도움이 될 것입니다. 원본 크기로 이미지를 확인하고, 편리하게 다운로드할 수 있어 X.com에서의 시각적 콘텐츠 경험이 크게 향상됩니다.\n스크립트는 지속적으로 개선되고 있으며, 최신 버전과 업데이트는 GitHub 저장소에서 확인할 수 있습니다. 버그 신고나 기능 제안도 GitHub 이슈를 통해 해주시면 적극 반영하겠습니다.\n이 프로젝트는 MIT 라이선스로 제공되어 자유롭게 사용, 수정, 배포가 가능합니다.\n","permalink":"https://piesp.github.io/posts/xcom-enhanced-gallery/","summary":"X.com 향상된 이미지 갤러리 소개 최근 X.com(구 트위터)의 이미지 뷰어는 많은 제한사항을 가지고 있습니다. 특히 여러 이미지가 포함된 게시물을 볼 때 원본 크기로 보기 어렵고, 이미지를 저장하려면 일일이 클릭해야 하는 번거로움이 있습니다. 이러한 불편함을 해소하기 위해 제작한 \u0026ldquo;X.com 향상된 이미지 갤러리\u0026rdquo; 유저 스크립트를 소개합니다.\n주요 기능 이 스크립트는 X.com의 기본 이미지 뷰어를 완전히 대체하여 더 나은 사용자 경험을 제공합니다:\n원본 크기 이미지 표시: X.com이 제공하는 압축된 이미지 대신 원본 크기의 이미지를 볼 수 있습니다.","title":"X.com 향상된 이미지 갤러리 유저 스크립트 소개"},{"content":"니코니코 자동 언어 설정 스크립트 소개 니코니코 동영상(NicoNico)은 일본의 인기 있는 동영상 공유 플랫폼으로, 독특한 댓글 시스템으로 유명합니다. 그러나 많은 해외 사용자들이 사이트 언어 설정 때문에 불편함을 겪고 있습니다. 특히, 사이트 언어 설정이 일본어가 아닐 경우 일부 댓글이 표시되지 않는 문제가 발생합니다. 이 문제를 해결하기 위해 개발한 \u0026ldquo;니코니코 자동 언어 설정\u0026rdquo; 유저 스크립트를 소개합니다.\n주요 기능 이 스크립트는 다음과 같은 기능을 제공합니다:\n자동 언어 설정: 니코니코 사이트에 접속할 때 자동으로 언어를 일본어로 설정합니다.\n댓글 표시 보장: 언어 설정을 일본어로 변경하여 모든 댓글이 올바르게 표시되도록 합니다.\n다양한 감지 방식: 사이트 업데이트에도 대응할 수 있도록 여러 방식으로 언어 설정 UI 요소를 감지합니다.\n시각적 알림: 언어 설정이 변경될 때 화면에 알림을 표시합니다(선택적으로 비활성화 가능).\nDOM 감시: 동적으로 로드되는 콘텐츠에 대응하기 위한 스마트 DOM 감시 기능을 제공합니다.\n효율적 성능: 과도한 리소스 사용을 방지하기 위한 타임아웃 메커니즘이 포함되어 있습니다.\n디버그 로깅: 문제 해결을 위한 상세 로깅 기능을 제공합니다(기본적으로 비활성화).\n설치 방법 먼저 유저 스크립트 관리자를 설치합니다:\nTampermonkey (권장) Violentmonkey Greasemonkey 아래 링크를 클릭하여 스크립트를 설치합니다:\n니코니코 자동 언어 설정 스크립트 설치 유저 스크립트 관리자에서 설치를 확인합니다.\n사용 방법 설치 후 별도의 설정이나 조작이 필요 없습니다:\n니코니코 사이트(*.nicovideo.jp)에 접속합니다. 스크립트가 자동으로 현재 언어 설정이 일본어인지 확인합니다. 일본어로 설정되어 있지 않다면, 자동으로 언어 설정을 변경합니다. 언어가 변경되면 짧은 초록색 알림이 표시됩니다(활성화된 경우). 페이지가 올바른 일본어 설정으로 다시 로드됩니다. 사용자 설정 스크립트는 기본 설정으로 작동하지만, 필요에 따라 코드 내 userSettings 객체를 수정하여 사용자 정의할 수 있습니다:\nconst userSettings = { enabled: true, // 스크립트 활성화/비활성화 showNotification: true, // 언어 변경 시 시각적 피드백 표시 language: \u0026#39;ja-jp\u0026#39;, // 대상 언어 코드 (기본값: 일본어) debug: false // 문제 해결을 위한 상세 로깅 활성화 }; 스크립트 개발 배경 이 스크립트는 특정 니코니코 동영상에서 댓글이 표시되지 않는 문제를 발견한 후 개발되었습니다. 조사 결과, 이 문제는 언어 설정으로 인한 것으로 밝혀졌습니다. 니코니코 사이트는 선택된 언어로 된 댓글만 표시하는 특성이 있어, 언어가 일본어로 설정되어 있지 않으면 일본어 댓글(대부분의 댓글)이 표시되지 않습니다.\n이 스크립트는 언어를 자동으로 일본어로 설정하여 이 문제를 해결하고, 일관된 시청 경험을 보장합니다.\n기술적 구현 세부사항 스크립트는 다음과 같은 방식으로 작동합니다:\n언어 상태 감지: 문서의 lang 속성을 확인하여 현재 언어가 이미 일본어인지 확인합니다.\n다중 선택자 탐색: 여러 CSS 선택자를 사용하여 언어 설정 UI 요소를 찾습니다. 이는 사이트 업데이트에도 스크립트가 계속 작동할 수 있도록 합니다.\n언어 변경 프로세스: 적절한 양식 요소를 찾고 언어 값을 \u0026lsquo;ja-jp\u0026rsquo;로 설정한 다음 양식을 제출합니다.\n동적 콘텐츠 처리: 뮤테이션 옵저버를 사용하여 DOM 변경을 감시하고 동적으로 로드되는 언어 선택 UI 요소를 감지합니다.\n효율성 고려: 과도한 CPU 사용을 방지하기 위해 5초 후 관찰을 중단하는 타임아웃 메커니즘이 포함되어 있습니다.\n맺음말 니코니코 동영상을 자주 시청하는 사용자라면 이 스크립트가 큰 도움이 될 것입니다. 언어 설정을 자동으로 관리하여 모든 댓글을 볼 수 있게 해주고, 사이트 사용 경험을 일관되게 유지합니다.\n스크립트는 지속적으로 개선되고 있으며, 최신 버전과 업데이트는 GitHub 저장소에서 확인할 수 있습니다. 버그 신고나 기능 제안도 GitHub 이슈를 통해 해주시면 적극 반영하겠습니다.\n이 프로젝트는 MIT 라이선스로 제공되어 자유롭게 사용, 수정, 배포가 가능합니다.\n","permalink":"https://piesp.github.io/posts/niconico-auto-set-language/","summary":"니코니코 자동 언어 설정 스크립트 소개 니코니코 동영상(NicoNico)은 일본의 인기 있는 동영상 공유 플랫폼으로, 독특한 댓글 시스템으로 유명합니다. 그러나 많은 해외 사용자들이 사이트 언어 설정 때문에 불편함을 겪고 있습니다. 특히, 사이트 언어 설정이 일본어가 아닐 경우 일부 댓글이 표시되지 않는 문제가 발생합니다. 이 문제를 해결하기 위해 개발한 \u0026ldquo;니코니코 자동 언어 설정\u0026rdquo; 유저 스크립트를 소개합니다.\n주요 기능 이 스크립트는 다음과 같은 기능을 제공합니다:\n자동 언어 설정: 니코니코 사이트에 접속할 때 자동으로 언어를 일본어로 설정합니다.","title":"니코니코 동영상 자동 언어 설정 스크립트"},{"content":"블로그 시작 Hugo 블로그를 설정하고 첫 번째 글을 작성합니다.\nHugo란? Hugo는 Go 언어로 작성된 정적 사이트 생성기로, 매우 빠른 빌드 속도를 자랑합니다. 마크다운 형식으로 콘텐츠를 작성하면 HTML로 변환하여 웹사이트를 생성해 줍니다.\nGitHub Pages로 배포하기 GitHub Pages를 사용하면 무료로 정적 웹사이트를 호스팅할 수 있습니다. GitHub Actions를 활용하여 자동 배포 파이프라인을 구축할 수 있어 편리합니다.\n앞으로의 계획 이 블로그에서는 다양한 주제에 대한 글을 작성할 예정입니다. 많은 관심 부탁드립니다!\n","permalink":"https://piesp.github.io/posts/hello-world/","summary":"블로그 시작 Hugo 블로그를 설정하고 첫 번째 글을 작성합니다.\nHugo란? Hugo는 Go 언어로 작성된 정적 사이트 생성기로, 매우 빠른 빌드 속도를 자랑합니다. 마크다운 형식으로 콘텐츠를 작성하면 HTML로 변환하여 웹사이트를 생성해 줍니다.\nGitHub Pages로 배포하기 GitHub Pages를 사용하면 무료로 정적 웹사이트를 호스팅할 수 있습니다. GitHub Actions를 활용하여 자동 배포 파이프라인을 구축할 수 있어 편리합니다.\n앞으로의 계획 이 블로그에서는 다양한 주제에 대한 글을 작성할 예정입니다. 많은 관심 부탁드립니다!","title":"안녕하세요, Hugo!"}]